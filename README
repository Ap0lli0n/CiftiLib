The CiftiLib library requires boost headers and either QT (4.8.x or 5), or libxml++ 2.17.x or newer (and its dependencies: libxml2, glib, sigc++, gtkmm and glibmm) and the boost filesystem library to compile, and optionally uses zlib if you want to use its NIfTI reading capabilities for other purposes.

To build it, and example executables, in the recommended "out-of-source" method using cmake:

#start one level up from the source tree
#make a build directory beside the source tree, enter it
mkdir build; cd build

#NOTE: you may want to set the cmake variable CMAKE_BUILD_TYPE to Release or Debug before building
#the default build behavior may be non-optimized and without debug symbols.

#run cmake to generate makefiles
cmake -D CMAKE_BUILD_TYPE=Release ../CiftiLib
#OR
cmake-gui ../CiftiLib

#build
make

#OPTIONAL: run tests
make test

#install library to location specified by cmake variable CMAKE_INSTALL_PREFIX
make install

#OPTIONAL: generate documentation (needs doxygen installed and on PATH)
make doc

The build results will be in subdirectories of the build directory, not in the source directory.

To use the installed library, use the cmake imported target to get the needed directories and libraries:

add_executable(yourProject yourProject.cpp)
find_package(CiftiLib)
target_link_libraries(yourProject Cifti)

If you are not using cmake, it also installs a file for pkg-config:

$ pkg-config CiftiLib --libs
-L/usr/local/lib -lCifti -lxml++-2.6 -lxml2 -lglibmm-2.4 -lgobject-2.0 -lglib-2.0 -lsigc-2.0

Troubleshooting:

If you are using manually-installed libraries rather than distribution-packaged libraries, you may need to use the cmake variables CMAKE_LIBRARY_PATH and CMAKE_INCLUDE_PATH.

If you are getting link errors related to boost, try setting a cmake variable Boost_NO_BOOST_CMAKE to true.

